#!/bin/sh

# https://www.viget.com/articles/two-ways-to-share-git-hooks-with-your-team/
# git config --global core.hooksPath .githooks

# run from the root of the repo
echo "commit cancelled" # when error occurs, VSC automatically output first echo here, therefore this strange output
echo "#####################"
echo "###### PRE-COMMIT git hook"
echo "###### Various checks"
exec powershell.exe -NoProfile -ExecutionPolicy Bypass -file ".\.githooks\pre-commit.ps1"

#exec powershell.exe -NoProfile -ExecutionPolicy Bypass -Command { & .\.githooks\pre-commit.ps1; exit $LASTEXITCODE; }
#c:/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -ExecutionPolicy RemoteSigned -File '.githooks\pre-commit.ps1'

#.githooks/replace_by_git_vars.py readme.md README.md
# If your filesystem is not case-sensitive you can use
# .githooks/replace_by_git_vars.py README.template.md README.md

# https://dev.to/anibalardid/how-to-check-commit-message-and-branch-name-with-git-hooks-without-any-new-installation-n34
# BRANCH=$(git rev-parse --abbrev-ref HEAD)
# REGEX="^(dev|release)-([0-9]+)-q([0-9]+)\.([0-9]+)\.(.+)$"
#
# if ! [[ $BRANCH =~ $REGEX ]]; then
#   echo "Your commit was rejected due to branching name"
#   echo "Please rename your branch with '(dev|release)-YYYY-qX.X.X' syntax"
#   exit 1
# fi

echo "###### PRE-COMMIT git hook - END"
echo "#####################"
exit 0

# Example:
# [![Integration Tests](https://github.com/{{ repository.name }}/actions/workflows/integration-tests.yaml/badge.svg?branch={{ current.branch }})](https://github.com/{{ repository.name }}/actions/workflows/integration-tests.yaml?query=branch%3A{{ current.branch }})